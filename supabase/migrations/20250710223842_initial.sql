create extension if not exists "vector" with schema "public" version '0.8.0';

create table "public"."guidelines" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "is_global" boolean not null,
    "condition" text,
    "guideline" text not null,
    "condition_vector" vector(1536),
    "is_disabled" boolean not null default false
);


create table "public"."messsages" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "user_id" bigint not null,
    "is_agent_response" boolean not null default false,
    "message" text not null
);


create table "public"."users" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "full_name" character varying not null default '255'::character varying
);


CREATE INDEX guidelines_condition_vector_idx ON public.guidelines USING hnsw (condition_vector vector_cosine_ops);

CREATE UNIQUE INDEX guidelines_pkey ON public.guidelines USING btree (id);

CREATE UNIQUE INDEX messsages_pkey ON public.messsages USING btree (id);

CREATE UNIQUE INDEX users_pkey ON public.users USING btree (id);

alter table "public"."guidelines" add constraint "guidelines_pkey" PRIMARY KEY using index "guidelines_pkey";

alter table "public"."messsages" add constraint "messsages_pkey" PRIMARY KEY using index "messsages_pkey";

alter table "public"."users" add constraint "users_pkey" PRIMARY KEY using index "users_pkey";

alter table "public"."messsages" add constraint "messsages_user_id_fkey" FOREIGN KEY (user_id) REFERENCES users(id) not valid;

alter table "public"."messsages" validate constraint "messsages_user_id_fkey";

set check_function_bodies = off;

CREATE OR REPLACE FUNCTION public.search_similar_guidelines(query_embedding text, match_count integer DEFAULT 5)
 RETURNS TABLE(id bigint, created_at timestamp with time zone, condition text, guideline text, is_disabled boolean, is_global boolean, similarity double precision)
 LANGUAGE plpgsql
AS $function$
DECLARE
  query_vector vector(1536);
BEGIN
  -- Convert the text embedding to vector type
  query_vector := query_embedding::vector;
  
  -- Perform the similarity search
  RETURN QUERY
  SELECT 
    g.id,
    g.created_at,
    g.condition,
    g.guideline,
    g.is_disabled,
    g.is_global,
    -- Calculate cosine similarity (1 - cosine distance)
    (1 - (g.condition_vector <=> query_vector)) as similarity
  FROM public.guidelines g
  WHERE 
    g.condition_vector IS NOT NULL
    AND g.is_disabled = false
    AND g.is_global = false
  ORDER BY g.condition_vector <=> query_vector
  LIMIT match_count;
END;
$function$
;

grant delete on table "public"."guidelines" to "anon";

grant insert on table "public"."guidelines" to "anon";

grant references on table "public"."guidelines" to "anon";

grant select on table "public"."guidelines" to "anon";

grant trigger on table "public"."guidelines" to "anon";

grant truncate on table "public"."guidelines" to "anon";

grant update on table "public"."guidelines" to "anon";

grant delete on table "public"."guidelines" to "authenticated";

grant insert on table "public"."guidelines" to "authenticated";

grant references on table "public"."guidelines" to "authenticated";

grant select on table "public"."guidelines" to "authenticated";

grant trigger on table "public"."guidelines" to "authenticated";

grant truncate on table "public"."guidelines" to "authenticated";

grant update on table "public"."guidelines" to "authenticated";

grant delete on table "public"."guidelines" to "service_role";

grant insert on table "public"."guidelines" to "service_role";

grant references on table "public"."guidelines" to "service_role";

grant select on table "public"."guidelines" to "service_role";

grant trigger on table "public"."guidelines" to "service_role";

grant truncate on table "public"."guidelines" to "service_role";

grant update on table "public"."guidelines" to "service_role";

grant delete on table "public"."messsages" to "anon";

grant insert on table "public"."messsages" to "anon";

grant references on table "public"."messsages" to "anon";

grant select on table "public"."messsages" to "anon";

grant trigger on table "public"."messsages" to "anon";

grant truncate on table "public"."messsages" to "anon";

grant update on table "public"."messsages" to "anon";

grant delete on table "public"."messsages" to "authenticated";

grant insert on table "public"."messsages" to "authenticated";

grant references on table "public"."messsages" to "authenticated";

grant select on table "public"."messsages" to "authenticated";

grant trigger on table "public"."messsages" to "authenticated";

grant truncate on table "public"."messsages" to "authenticated";

grant update on table "public"."messsages" to "authenticated";

grant delete on table "public"."messsages" to "service_role";

grant insert on table "public"."messsages" to "service_role";

grant references on table "public"."messsages" to "service_role";

grant select on table "public"."messsages" to "service_role";

grant trigger on table "public"."messsages" to "service_role";

grant truncate on table "public"."messsages" to "service_role";

grant update on table "public"."messsages" to "service_role";

grant delete on table "public"."users" to "anon";

grant insert on table "public"."users" to "anon";

grant references on table "public"."users" to "anon";

grant select on table "public"."users" to "anon";

grant trigger on table "public"."users" to "anon";

grant truncate on table "public"."users" to "anon";

grant update on table "public"."users" to "anon";

grant delete on table "public"."users" to "authenticated";

grant insert on table "public"."users" to "authenticated";

grant references on table "public"."users" to "authenticated";

grant select on table "public"."users" to "authenticated";

grant trigger on table "public"."users" to "authenticated";

grant truncate on table "public"."users" to "authenticated";

grant update on table "public"."users" to "authenticated";

grant delete on table "public"."users" to "service_role";

grant insert on table "public"."users" to "service_role";

grant references on table "public"."users" to "service_role";

grant select on table "public"."users" to "service_role";

grant trigger on table "public"."users" to "service_role";

grant truncate on table "public"."users" to "service_role";

grant update on table "public"."users" to "service_role";


